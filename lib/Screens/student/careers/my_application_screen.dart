import 'package:flutter/material.dart';import 'package:provider/provider.dart';import 'package:schoolworkspro_app/Screens/student/careers/career_view_model.dart';import 'package:schoolworkspro_app/components/shimmer.dart';import 'package:schoolworkspro_app/response/my_application_response.dart';import 'package:intl/intl.dart';import '../../../config/api_response_config.dart';import '../../../constants.dart';import '../../../constants/colors.dart';class MyApplicationScreen extends StatefulWidget {  const MyApplicationScreen({Key? key}) : super(key: key);  @override  _MyApplicationScreenState createState() =>      _MyApplicationScreenState();}class _MyApplicationScreenState extends State<MyApplicationScreen>    with TickerProviderStateMixin {  late TabController _tabController2;  late CareerViewModel _provider;  @override  void initState() {    _provider = Provider.of<CareerViewModel>(context, listen: false);    refreshPage(provider:  _provider);    _tabController2 =        TabController(length: 4, vsync: this, initialIndex: 0);    super.initState();  }  Future<void> refreshPage({required CareerViewModel provider}) async {    WidgetsBinding.instance.addPostFrameCallback((timeStamp) {      provider.fetchMyApplication();    });  }  final List<Tab> myTabs2 = <Tab>[    Tab(text: 'Applied'),    Tab(text: 'In Process'),    const Tab(text: 'Accepted'),    Tab(text: 'Rejected'),  ];  final List<String> status = <String>[    "applied",    "inProcess",    "accepted",    "rejected"  ];  @override  Widget build(BuildContext context) {    return Consumer<CareerViewModel>(      builder: (context, career, child) {        return isLoading(career.myApplicationApiResponse) ? const VerticalLoader() :            career.myApplication.requests == null ? Container() :        SafeArea(            child: RefreshIndicator(              onRefresh: ()=> refreshPage(provider: career),              child: Column(                crossAxisAlignment: CrossAxisAlignment.center,                children: [                  // Padding(                  //   padding: const EdgeInsets.symmetric(horizontal: 11, vertical: 10),                  //   child: Container(                  //     height: 45,                  //     decoration: BoxDecoration(                  //       color: Colors.grey[100],                  //       borderRadius: BorderRadius.circular(4),                  //     ),                  //     child: const InkWell(                  //       // onTap: () => Navigator.of(context).pushNamed(SearchScreen.routeName),                  //       child: TextField(                  //         textAlignVertical: TextAlignVertical.center,                  //         decoration: InputDecoration(                  //           contentPadding: EdgeInsets.symmetric(vertical: 5),                  //           alignLabelWithHint: true,                  //           border: InputBorder.none,                  //           focusedBorder: InputBorder.none,                  //           enabledBorder: InputBorder.none,                  //           hintText: "Application ID/Topic",                  //           hintStyle: TextStyle(color: Colors.grey),                  //           prefixIcon: Icon(                  //             Icons.search,                  //             color: Colors.grey,                  //           ),                  //         ),                  //       ),                  //     ),                  //   ),                  // ),                  TabBar(                    isScrollable: true,                    unselectedLabelColor: black,                    labelColor: logoTheme,                    indicatorColor: logoTheme,                    padding: EdgeInsets.zero,                    indicatorSize: TabBarIndicatorSize.tab,                    indicatorPadding: EdgeInsets.zero,                    indicatorWeight: 4,                    tabs: myTabs2,                    controller: _tabController2,                  ),                  const SizedBox(                    height: 10,                  ),                  Builder(                    builder: (context) {                      List<Widget> outer = [];                      for (int i = 0; i < status.length; i++) {                        outer.add(_buildJobCard(status[i].toString(), career.myApplication.requests!, career));                      }                      return Expanded(                        child: TabBarView(                          controller: _tabController2,                          children: [                            ...outer                          ],                        ),                      );                    }                  ),                ],              ),            ));      }    );  }  Widget _buildJobCard(String status, List<Request> requests, CareerViewModel career) {    return ListView.builder(        itemCount: requests.length,        itemBuilder: (context, index) {          return requests[index].status == status ?          Padding(            padding: const EdgeInsets.all(8.0),            child: Container(              padding:                  const EdgeInsets.symmetric(horizontal: 10, vertical: 10),              decoration: const BoxDecoration(                  border: Border(                      left: BorderSide(                          color: Color(0xffDCAC04), width: 5, ), right: BorderSide(                      color: Color(0xffDCAC04), width: 1), top: BorderSide(                      color: Color(0xffDCAC04), width: 1), bottom: BorderSide(                      color: Color(0xffDCAC04), width: 1))),              child: Column(                crossAxisAlignment: CrossAxisAlignment.start,                children: [                  Text(requests[index].topic.toString(),                    style: const TextStyle(                        fontSize: 16, color: Colors.black),),                  const SizedBox(                    height: 10,                  ),                  Container(                      padding: const EdgeInsets.symmetric(horizontal: 5, vertical: 1),                      decoration: BoxDecoration(                          color: Colors.black,                          border: Border.all(),                          borderRadius: BorderRadius.circular(4)                      ),                      child: Text(                        requests[index].applicationId.toString(),                        style: const TextStyle(                            color: Colors.white,                            fontWeight: FontWeight.normal, fontSize: 14),                      )),                  const SizedBox(                    height: 10,                  ),                  Row(                    children: [                      Icon(Icons.timelapse),                      SizedBox(                        width: 5,                      ),                      Text(DateFormat.yMMMEd().format(requests[index].createdAt!),)                    ],                  ),                  const SizedBox(                    height: 10,                  ),                  InkWell(                    onTap: (){                      Navigator.pushNamed(context, "/myApplicationDetailScreen", arguments: requests[index]).then((value){                        career.fetchMyApplication();                      });                    },                      child: Container(                    padding: EdgeInsets.symmetric(vertical: 10),                    width: MediaQuery.of(context).size.width,                    decoration: BoxDecoration(                      borderRadius: BorderRadius.circular(4),                      color: logoTheme,                    ),                    child: const Text("View Detail of Applier",                        textAlign: TextAlign.center,                        style: TextStyle(                          fontSize: 14,                          color: white,                        )),                  )),                  // ElevatedButton(                  //     style: ButtonStyle(                  //       padding: MaterialStateProperty.all<EdgeInsets>(EdgeInsets.fromLTRB(0, 0, 0, 0)),                  //       elevation: MaterialStateProperty.all(0),                  //       backgroundColor: MaterialStateProperty.all(                  //           Color(0xff475AF4)),                  //       minimumSize: MaterialStateProperty.all<Size>(                  //           Size(MediaQuery.of(context).size.width,                  //               40)),                  //     ),                  //     onPressed: () {                  //       Navigator.pushNamed(context, "/myApplicationDetailScreen", arguments: requests[index]).then((value){                  //         career.fetchMyApplication();                  //       });                  //     },                  //     child: const Text("View Detail od Applier",                  //         style: TextStyle(                  //           fontSize: 14,                  //           color: Colors.white,                  //         ))),                ],              ),            ),          ) : Container();        });  }}