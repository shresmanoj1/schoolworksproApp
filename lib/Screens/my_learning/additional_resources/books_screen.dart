import 'dart:io' as io;import 'package:advance_pdf_viewer/advance_pdf_viewer.dart';import 'package:flutter/foundation.dart';import 'package:flutter/material.dart';import 'package:provider/provider.dart';import 'package:schoolworkspro_app/Screens/my_learning/additional_resources/additional_resources_view_model.dart';import 'package:schoolworkspro_app/components/shimmer.dart';import 'package:url_launcher/url_launcher.dart';import '../../../config/api_response_config.dart';import '../../../constants/colors.dart';import '../../../constants/text_style.dart';class BookScreen extends StatefulWidget {  final lessonSlug;  const BookScreen({Key? key, required this.lessonSlug}) : super(key: key);  @override  State<BookScreen> createState() => _BookScreenState();}class _BookScreenState extends State<BookScreen> {  late AdditionalResourcesViewModel additionalResourcesViewModel;  @override  void initState() {    WidgetsBinding.instance.addPostFrameCallback((timeStamp) {      additionalResourcesViewModel =          Provider.of<AdditionalResourcesViewModel>(context, listen: false);    });    super.initState();  }  Future<void> refreshData() async {    additionalResourcesViewModel.fetchBookLinks(widget.lessonSlug);  }  Future<void> _launchInBrowser(Uri url) async {    if (!await launchUrl(      url,      mode: LaunchMode.externalApplication,    )) {      throw 'Could not launch $url';    }  }  @override  Widget build(BuildContext context) {    return Scaffold(        appBar: AppBar(          elevation: 0.0,          iconTheme: const IconThemeData(color: Colors.black),          backgroundColor: Colors.white,          title: const Text(            "Books",            style: TextStyle(color: Colors.black),          ),        ),        body: Consumer<AdditionalResourcesViewModel>(        builder: (context, getBookLinks, child) {      return isLoading(getBookLinks.BooksResponse)          ? const VerticalLoader()          : RefreshIndicator(              onRefresh: () => refreshData(),              child: Padding(                padding:                    const EdgeInsets.symmetric(horizontal: 10, vertical: 10),                child: ListView.builder(                  itemCount: getBookLinks.books.length,                  itemBuilder: (BuildContext context, int index) {                    return Padding(                      padding: const EdgeInsets.symmetric(                          horizontal: 20, vertical: 10),                      child: InkWell(                        onTap: () {                          String url =                              "https://api.schoolworkspro.com/uploads/books/${getBookLinks.books[index].file}";                          _launchInBrowser(Uri.parse(url));                        },                        child: Container(                          decoration: BoxDecoration(                              borderRadius: BorderRadius.circular(12),                              border: Border.all(color: grey_400)),                          clipBehavior: Clip.antiAlias,                          child: Padding(                            padding: const EdgeInsets.all(8.0),                            child: RichText(                              text: TextSpan(                                  text: "${index + 1}.",                                  style: p15.copyWith(color: Colors.black),                                  children: [                                    TextSpan(                                      text: getBookLinks.books[index].name                                          .toString(),                                      style: p14.copyWith(color: Colors.black),                                    ),                                  ]),                            ),                          ),                        ),                      ),                    );                  },                ),              ));    }));  }}class PDFScreen extends StatefulWidget {  final path;  const PDFScreen({Key? key, required this.path}) : super(key: key);  @override  _PDFScreenState createState() => _PDFScreenState();}class _PDFScreenState extends State<PDFScreen> {  bool _isLoading = true;  late PDFDocument document;  @override  void initState() {    super.initState(); // print(    //     "https://api.schoolworkspro.com/uploads/books/-%20The%20Information%20Systems%20Security%20Officer's%20Guide.%20Establishing%20and%20Managing%20a%20Cyber%20Security%20Program%3D1606105512972.pdf"); changePDF();  }  changePDF() async {    setState(() => _isLoading = true);    launch("https://api.schoolworkspro.com/uploads/books/" +        widget            .path); // document = await PDFDocument.fromURL("africau.edu/images/default/sample.pdf"); // print("https://api.schoolworkspro.com/uploads/books/"+widget.path); // //   const url = 'https://flutter.dev/exapmle.pdf'; //   if (await canLaunch(url)) {    //     await launch(url); //   } else { //     throw 'Could not launch $url'; // // } // document = await PDFDocument.fromURL("https://api.schoolworkspro.com/uploads/books/-%20The%20Information%20Systems%20Security%20Officer's%20Guide.%20Establishing%20and%20Managing%20a%20Cyber%20Security%20Program%3D1606105512972.pdf" setState(    //     () => _isLoading = false);  }  @override  Widget build(BuildContext context) {    return Scaffold(      appBar: AppBar(        backgroundColor: Colors.white,        iconTheme: const IconThemeData(color: Colors.black),        elevation: 0.0,        title: const Text(          "PDF",          style: TextStyle(color: Colors.black),        ),      ),      body: Center(        child: _isLoading            ? Center(child: CircularProgressIndicator())            : PDFViewer(                document: document,                zoomSteps: 1,              ),      ),    );  }}