import 'dart:convert';import 'dart:io';import 'package:flutter/material.dart';import 'package:new_version/new_version.dart';import 'package:schoolworkspro_app/Screens/my_learning/additional_resources/books_screen.dart';import 'package:schoolworkspro_app/Screens/my_learning/additional_resources/reference_links_screen.dart';import 'package:schoolworkspro_app/Screens/my_learning/additional_resources/youtube_video_screen.dart';import 'package:schoolworkspro_app/Screens/my_learning/tab_button.dart';import 'package:shared_preferences/shared_preferences.dart';import '../../../response/authenticateduser_response.dart';class AdditionalResourcesScreen extends StatefulWidget {  static const routeName = "additional_resources";  final lessonSlug;  const AdditionalResourcesScreen({Key? key, this.lessonSlug})      : super(key: key);  @override  _AdditionalResourcesScreenState createState() =>      _AdditionalResourcesScreenState();}class _AdditionalResourcesScreenState    extends State<AdditionalResourcesScreen> {  User? user;  @override  void initState() {    // TODO: implement initState    // _pageController = PageController();    super.initState();    getUser();  }  getUser() async {    SharedPreferences sharedPreferences = await SharedPreferences.getInstance();    String? userData = sharedPreferences.getString('_auth_');    Map<String, dynamic> userMap = json.decode(userData!);    User userD = User.fromJson(userMap);    setState(() {      user = userD;    });  }  @override  Widget build(BuildContext context) {    return Scaffold(      appBar: user?.type! == "Lecturer" ||          user?.type == "Head Lecturer" ? AppBar(        elevation: 0.0,        iconTheme: const IconThemeData(color: Colors.black),        backgroundColor: Colors.white,        title: const Text(          "Additional Resources",          style: TextStyle(color: Colors.black),        ),      ) : null ,      body: SafeArea(        child: Container(          child: Column(            mainAxisAlignment: MainAxisAlignment.start,            crossAxisAlignment: CrossAxisAlignment.start,            children: [              ListTile(                leading: const Icon(Icons.video_camera_front),                title: const Text("Youtube"),                onTap: () {                  Navigator.push(                    context,                    MaterialPageRoute(                        builder: (context) => YoutubeVideoScreen(lessonSlug: widget.lessonSlug)),                  );                }              ),              ListTile(                leading: const Icon(Icons.link_sharp),                title: const Text("Reference Links"),                onTap: () {                  Navigator.push(                    context,                    MaterialPageRoute(                        builder: (context) => ReferenceLinksScreen(                          lessonSlug: widget.lessonSlug,                        )),                  );                },              ),ListTile(                leading: const Icon(Icons.book),                title: const Text("Books"),                onTap: () {                  Navigator.push(                    context,                    MaterialPageRoute(                        builder: (context) => BookScreen(                            lessonSlug: widget.lessonSlug,                        )),                  );                },              ),            ],          ),        ),      ),    );  }}