import 'package:flutter/material.dart';import 'package:schoolworkspro_app/api/api_response.dart';import 'package:schoolworkspro_app/api/repositories/learning_repository.dart';import 'package:schoolworkspro_app/response/additional_books_links_response.dart';import 'package:schoolworkspro_app/response/refrence_links_response.dart';import '../../../api/repositories/additional_resources_repo.dart';import '../../../response/slide_response.dart';import '../../../response/youtube_video_additional_resources_response.dart';class AdditionalResourcesViewModel extends ChangeNotifier {  ApiResponse _additionalResourcesResponse = ApiResponse.initial("Empty Data");  ApiResponse get additionalResourcesResponse => _additionalResourcesResponse;  List<Youtube> _youtube = <Youtube>[];  List<Youtube> get youtube => _youtube;  Future<void> fetchYoutubeLinks(String titleSlug) async {    _additionalResourcesResponse = ApiResponse.initial("Loading");    notifyListeners();    try {      YoutubeAdditinalResourcesResponse res =          await AdditionalResourceRepository().getYoutubeLinks(titleSlug);      if (res.success == true) {        _youtube = res.youtube!;        _additionalResourcesResponse =            ApiResponse.completed(res.success.toString());        notifyListeners();      } else {        _additionalResourcesResponse =            ApiResponse.error(res.success.toString());      }    } catch (e) {      print("VM CATCH ERR :: " + e.toString());      _additionalResourcesResponse = ApiResponse.error(e.toString());    }    notifyListeners();  }  ApiResponse _refreshLinksResponse = ApiResponse.initial("Empty Data");  ApiResponse get refreshLinksResponse => _refreshLinksResponse;  List<Link> _links = <Link>[];  List<Link> get links => _links;  Future<void> fetchRefreshLinks(String titleSlug) async {    _refreshLinksResponse = ApiResponse.initial("Loading");    notifyListeners();    try {      RefreshLinksResourcesResponse res =          await AdditionalResourceRepository().getRefreshLinks(titleSlug);      if (res.success == true) {        _links = res.links!;        _refreshLinksResponse = ApiResponse.completed(res.success.toString());        notifyListeners();      } else {        _refreshLinksResponse = ApiResponse.error(res.success.toString());      }    } catch (e) {      print("VM CATCH ERR :: " + e.toString());      _refreshLinksResponse = ApiResponse.error(e.toString());    }    notifyListeners();  }  ApiResponse _slideApiResponse = ApiResponse.initial("Empty Data");  ApiResponse get slideApiResponse => _slideApiResponse;  List<FileElement> _slides = <FileElement>[];  List<FileElement> get slides => _slides;  Future<void> fetchSlide(String titleSlug) async {    _slideApiResponse = ApiResponse.initial("Loading");    notifyListeners();    try {      SlideResponse res = await LearningRepository().getSlides(titleSlug);      if (res.success == true) {        _slides = res.files!;        _slideApiResponse = ApiResponse.completed(res.success.toString());        notifyListeners();      } else {        _slideApiResponse = ApiResponse.error(res.success.toString());      }    } catch (e) {      print("VM CATCH ERR :: " + e.toString());      _slideApiResponse = ApiResponse.error(e.toString());    }    notifyListeners();  }  ApiResponse _BooksResponse = ApiResponse.initial("Empty Data");  ApiResponse get BooksResponse => _BooksResponse;  List<Book> _books = <Book>[];  List<Book> get books => _books;  Future<void> fetchBookLinks(String titleSlug) async {    _BooksResponse = ApiResponse.initial("Loading");    notifyListeners();    try {      BooksLinksResponse res =          await AdditionalResourceRepository().getBooksLinks(titleSlug);      if (res.success == true) {        _books = res.books!;        _BooksResponse = ApiResponse.completed(res.success.toString());        notifyListeners();      } else {        _BooksResponse = ApiResponse.error(res.success.toString());      }    } catch (e) {      print("VM CATCH ERR :: " + e.toString());      _BooksResponse = ApiResponse.error(e.toString());    }    notifyListeners();  }}