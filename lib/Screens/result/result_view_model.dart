import 'package:flutter/material.dart';import 'package:schoolworkspro_app/api/api_response.dart';import '../../response/marks_response.dart';import '../../response/result_response.dart';import '../../services/result_service.dart';class StudentResultViewModel extends ChangeNotifier {  ApiResponse _resultApiResponse = ApiResponse.initial("Empty Data");  ApiResponse get resultApiResponse => _resultApiResponse;  List<Result>? _result = <Result>[];  List<Result>? get result => _result;  Future<void> fetchreslut() async {    _resultApiResponse = ApiResponse.initial("Loading");    notifyListeners();    try {      Resultresponse res = await Resultservice().getmyresults();      if (res.success == true) {        _result = res.results;        _resultApiResponse = ApiResponse.completed(res.success.toString());        notifyListeners();      } else {        _resultApiResponse = ApiResponse.error(res.success.toString());      }    } catch (e) {      print("VM CATCH ERR :: " + e.toString());      _resultApiResponse = ApiResponse.error(e.toString());    }    notifyListeners();  }  ApiResponse _marksApiResponse = ApiResponse.initial("Empty Data");  ApiResponse get marksApiResponse => _marksApiResponse;  MarksResponse _marks = MarksResponse();  MarksResponse get marks => _marks;  final List<MarksResponse> _tableColumn = <MarksResponse>[];  List<MarksResponse>? get tableColumn => _tableColumn;  Future<void> fetchMarks() async {    _marksApiResponse = ApiResponse.initial("Loading");    notifyListeners();    try {      MarksResponse res =      await Resultservice().getMyMarks();      if (res.success == true) {        _marks = res;        _marksApiResponse = ApiResponse.completed(res.success.toString());        notifyListeners();      } else {        _marksApiResponse = ApiResponse.error(res.success.toString());      }    } catch (e) {      print("VM CATCH ERRRR :: " + e.toString());      _marksApiResponse = ApiResponse.error(e.toString());    }    notifyListeners();  }  ApiResponse _childrenResultsApiResponse = ApiResponse.initial("Empty Data");  ApiResponse get childrenResultsApiResponse => _childrenResultsApiResponse;  MarksResponse _childrenResults = MarksResponse();  MarksResponse get childrenResults => _childrenResults;  Future<void> fetchChildrenResults(String studentId, String institution) async {    _childrenResultsApiResponse = ApiResponse.initial("Loading");    notifyListeners();    try {      MarksResponse res = await Resultservice().getChildrenResults(studentId, institution);      if (res.success == true) {        _childrenResults = res;        _childrenResultsApiResponse = ApiResponse.completed(res.success.toString());        notifyListeners();      } else {        _childrenResultsApiResponse = ApiResponse.error(res.success.toString());      }    } catch (e) {      print("VM CATCH ERR Result :: " + e.toString());      _childrenResultsApiResponse = ApiResponse.error(e.toString());    }    notifyListeners();  }}