import 'package:flutter/material.dart';class AbsentStudents extends StatefulWidget {  final dynamic data;  AbsentStudents({Key? key, required this.data}) : super(key: key);  @override  _AbsentStudentsState createState() => _AbsentStudentsState();}class _AbsentStudentsState extends State<AbsentStudents> {  Icon cusIcon = Icon(Icons.search);  late Widget cusSearchBar;  final TextEditingController _searchController =  TextEditingController();  List<dynamic> _listForDisplay = <dynamic>[];  List<dynamic> _list = <dynamic>[];  @override  void initState() {    cusSearchBar = Text(      "Absent Students",      style: TextStyle(color: Colors.black),    );    getData();    super.initState();  }  getData(){    // print("DATA::::${widget.data}");    for (var i = 0; i < widget.data.length; i++) {      setState(() {        _list.add(widget.data[i]);        _listForDisplay = _list;      });    }  }  @override  Widget build(BuildContext context) {    return Scaffold(        appBar: AppBar(          iconTheme: const IconThemeData(            color: Colors.black,          ),          actions: [            IconButton(                onPressed: () {                  setState(() {                    if (this.cusIcon.icon == Icons.search) {                      this.cusIcon = Icon(                        Icons.cancel,                        color: Colors.grey,                      );                      this.cusSearchBar = TextField(                        autofocus: true,                        textInputAction: TextInputAction.go,                        controller: _searchController,                        decoration: const InputDecoration(                            hintStyle:                            TextStyle(color: Colors.black),                            border: InputBorder.none,                            hintText: "Search by name..."),                        onChanged: (text) {                          setState(() {                            _listForDisplay = _list.where((list) {                              var name = list['full_name'];                              var itemName = name.toLowerCase();                              return itemName.contains(text);                            }).toList();                          });                        },                      );                    } else {                      this.cusIcon = Icon(Icons.search);                      this.cusSearchBar = Text(                        "Absent Students",                        style: TextStyle(color: Colors.black),                      );                    }                  });                },                icon: cusIcon)          ],          backgroundColor: Colors.white,          elevation: 0.0,          title: cusSearchBar,        ),        body: _list.isNotEmpty            ? ListView(          padding:          const EdgeInsets.symmetric(horizontal: 8.0),          children: [            ...List.generate(                _listForDisplay.length,                    (index) => Card(                  child: Padding(                    padding: const EdgeInsets.all(4.0),                    child: ListTile(                      title: _listForDisplay[                      index]["moduleData"]                      ["moduleTitle"] !=                          null                          ? RichText(                        text: TextSpan(                          text: 'Subject name: ',                          style: const TextStyle(                              color: Colors.black,                              fontWeight:                              FontWeight.bold),                          children: <TextSpan>[                            TextSpan(                              text: _listForDisplay[                              index]                              ["moduleData"]                              [                              "moduleTitle"]                                  .toString(),                              style: const TextStyle(                                  color:                                  Colors.black,                                  fontWeight:                                  FontWeight                                      .normal),                            ),                          ],                        ),                      )                          : null,                      subtitle: Column(                        mainAxisAlignment:                        MainAxisAlignment.start,                        crossAxisAlignment:                        CrossAxisAlignment.start,                        children: [                          RichText(                            text: TextSpan(                              text: 'Username: ',                              style: const TextStyle(                                  color: Colors.black,                                  fontWeight:                                  FontWeight.bold),                              children: <TextSpan>[                                TextSpan(                                  text: _listForDisplay[                                  index]                                  ["username"]                                      .toString(),                                  style: const TextStyle(                                      color: Colors.black,                                      fontWeight:                                      FontWeight                                          .normal),                                ),                              ],                            ),                          ),                          RichText(                            text: TextSpan(                              text: 'Name: ',                              style: const TextStyle(                                  color: Colors.black,                                  fontWeight:                                  FontWeight.bold),                              children: <TextSpan>[                                TextSpan(                                  text: _listForDisplay[                                  index]                                  ["full_name"]                                      .toString(),                                  style: const TextStyle(                                      color: Colors.black,                                      fontWeight:                                      FontWeight                                          .normal),                                ),                              ],                            ),                          ),                          RichText(                            text: TextSpan(                              text: 'Course: ',                              style: const TextStyle(                                  color: Colors.black,                                  fontWeight:                                  FontWeight.bold),                              children: <TextSpan>[                                TextSpan(                                  text: _listForDisplay[                                  index]["course"]                                      .toString(),                                  style: const TextStyle(                                      color: Colors.black,                                      fontWeight:                                      FontWeight                                          .normal),                                ),                              ],                            ),                          ),                          RichText(                            text: TextSpan(                              text: 'Batch: ',                              style: const TextStyle(                                  color: Colors.black,                                  fontWeight:                                  FontWeight.bold),                              children: <TextSpan>[                                TextSpan(                                  text: _listForDisplay[                                  index]["batch"]                                      .toString(),                                  style: const TextStyle(                                      color: Colors.black,                                      fontWeight:                                      FontWeight                                          .normal),                                ),                              ],                            ),                          ),                        ],                      ),                    ),                  ),                )),            SizedBox(              height: 50,            )          ],        )            : Image.asset("assets/images/no_content.PNG"));  }}