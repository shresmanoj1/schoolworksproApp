import 'package:flutter/cupertino.dart';import 'package:flutter/material.dart';import 'package:fluttertoast/fluttertoast.dart';import 'package:provider/provider.dart';import 'package:schoolworkspro_app/Screens/prinicpal/principal_common_view_model.dart';import 'package:schoolworkspro_app/api/repositories/principal/advisor_repo.dart';import 'package:schoolworkspro_app/request/referral_details_request.dart';import '../../../api/repositories/principal/assign_to_staff_repo.dart';class AssignToScreen extends StatefulWidget {  final id;  const AssignToScreen({    Key? key,    this.id,  }) : super(key: key);  @override  _AssignToScreenState createState() => _AssignToScreenState();}class _AssignToScreenState extends State<AssignToScreen> {  // late CommonViewModel _provider; // late CheckSubmissionViewModel _provider2; // late final responseProvider2;  late PrinicpalCommonViewModel _provider2;  String? staffName;  @override  void initState() {    // TODO: implement    //  initState    WidgetsBinding.instance        .addPostFrameCallback((timeStamp) {      _provider2 = Provider.of<PrinicpalCommonViewModel>(context,          listen: false);      _provider2.fetchAssignedToStaff().then((value) {        print(_provider2.staff);      });    });    super.initState();  }  @override  Widget build(BuildContext context) {    return Consumer<PrinicpalCommonViewModel>(        builder: (context, assignTo, child) {      return Scaffold(          appBar: AppBar(            title: const Text(              "Assign Staff",              style: TextStyle(color: Colors.black),            ),            backgroundColor: Colors.white,            elevation: 0.0,            iconTheme: const IconThemeData(color: Colors.black),          ),          body: Padding(            padding: const EdgeInsets.symmetric(horizontal: 10),            child: CustomScrollView(slivers: [              SliverFillRemaining(                hasScrollBody: false,                child: Column(                    crossAxisAlignment: CrossAxisAlignment.start,                    children: [                      Text('Select Staff *'),                      SizedBox(                        height: 5,                      ),                      DropdownButtonFormField(                        isExpanded: true,                        decoration: const InputDecoration(                          border: InputBorder.none,                          filled: true,                          hintText: 'Select Staff',                        ),                        icon: const Icon(                            Icons.arrow_drop_down_outlined),                        items: assignTo.staff.map((pt) {                          return DropdownMenuItem(                            value: pt.username,                            child: Text(                              pt.firstname.toString() +                                  " " +                                  pt.lastname.toString(),                              overflow: TextOverflow.ellipsis,                            ),                          );                        }).toList(),                        onChanged: (newVal) {                          setState(() {                            staffName = newVal as String?;                          });                        },                        value: staffName,                      ),                      SizedBox(                        height: 10,                      ),                      Row(                          mainAxisAlignment: MainAxisAlignment.center,                          children: [                            Padding(                              padding: const EdgeInsets.symmetric(                                  horizontal: 8.0),                              child: ElevatedButton(                                  onPressed: () async {                                    if (staffName == null) {                                      Fluttertoast.showToast(                                          msg: "Please select staff",                                          toastLength:                                              Toast.LENGTH_SHORT,                                          gravity:                                              ToastGravity.BOTTOM,                                          timeInSecForIosWeb: 1,                                          backgroundColor: Colors.red,                                          textColor: Colors.white,                                          fontSize: 16.0);                                    } else {                                      final request = {                                        "username": "$staffName",                                      };                                      print("username");                                      print(request);                                      final ress =                                          await AssignedToStaffRepository()                                              .assignedTo(                                                  widget.id, request);                                      if (ress.success == true) {                                        Fluttertoast.showToast(                                            msg: ress.message ?? "Success");                                        Navigator.pop(context);                                      } else {                                        Fluttertoast.showToast(                                            msg: ress.message ?? "Failed");                                      }                                    }                                  },                                  style: ButtonStyle(                                    backgroundColor:                                        MaterialStateProperty.all(                                            Colors.blue),                                  ),                                  child: const Text('Assign')),                            ),                            Padding(                              padding: const EdgeInsets.symmetric(                                  horizontal: 8.0),                              child: ElevatedButton(                                  onPressed: () async {                                    Navigator.pop(context);                                  },                                  style: ButtonStyle(                                    backgroundColor:                                        MaterialStateProperty.all(                                            Colors.black),                                  ),                                  child: const Text('Cancel')),                            )                          ])                    ]),              )            ]),          ));    });  }}