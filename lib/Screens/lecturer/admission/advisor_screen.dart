import 'package:flutter/cupertino.dart';import 'package:flutter/material.dart';import 'package:flutter_spinkit/flutter_spinkit.dart';import 'package:page_transition/page_transition.dart';import 'package:provider/provider.dart';import 'package:schoolworkspro_app/Screens/lecturer/admission/advisor_details_screen.dart';import 'package:schoolworkspro_app/Screens/lecturer/admission/lecturer_advisor_view_model.dart';import 'package:schoolworkspro_app/config/api_response_config.dart';import 'package:schoolworkspro_app/constants.dart';import '../../../constants/colors.dart';class LecturerAdvisorScreen extends StatefulWidget {  final bool showAppBar;  const LecturerAdvisorScreen({Key? key, required this.showAppBar})      : super(key: key);  @override  _LecturerAdvisorScreenState createState() => _LecturerAdvisorScreenState();}class _LecturerAdvisorScreenState extends State<LecturerAdvisorScreen> {  @override  void initState() {    WidgetsBinding.instance.addPostFrameCallback((timeStamp) {      Provider.of<LecturerAdvisorViewModel>(context, listen: false)          .fetchAssigned();    });    super.initState();  }  Future<void> _handleRefresh() async {    await Provider.of<LecturerAdvisorViewModel>(context, listen: false)        .fetchAssigned();  }  @override  Widget build(BuildContext context) {    return Consumer<LecturerAdvisorViewModel>(builder: (context, data, child) {      return Scaffold(        appBar: widget.showAppBar            ? AppBar(          elevation: 0.0,          centerTitle: false,          title: const Text(            "Enquiries/Admission",            style: TextStyle(color: white),          ),        )            : null,        body: isLoading(data.advisorAssignedReponse)            ? const Center(child: CupertinoActivityIndicator())            : RefreshIndicator(                onRefresh: _handleRefresh,                child: ListView(                  children: [                    data.admissionData.isEmpty                        ? Image.asset("assets/images/no_content.PNG")                        : ListView.builder(                            shrinkWrap: true,                            itemCount: data.admissionData.length,                            physics: const ScrollPhysics(),                            itemBuilder: (context, index) {                              var datas = data.admissionData[index];                              return Card(                                child: Padding(                                  padding: const EdgeInsets.all(8.0),                                  child: Column(                                    mainAxisAlignment: MainAxisAlignment.start,                                    crossAxisAlignment:                                        CrossAxisAlignment.start,                                    children: [                                      datas.admission == null                                          ? const SizedBox()                                          : Padding(                                              padding:                                                  const EdgeInsets.symmetric(                                                      horizontal: 8.0),                                              child: Chip(                                                  backgroundColor:                                                      datas.admission ==                                                              "Admitted"                                                          ? Colors.green                                                          : Colors.orange,                                                  label: Text(                                                    datas.admission == null ||                                                            datas.admission ==                                                                ''                                                        ? 'N/A'                                                        : datas.admission                                                            .toString(),                                                    style: const TextStyle(                                                        color: Colors.white),                                                  )),                                            ),                                      ListTile(                                        trailing: IconButton(                                          icon: const Icon(Icons.visibility),                                          onPressed: () {                                            Navigator.push(                                                context,                                                PageTransition(                                                    child:                                                        LecturerAdvisorDetailScreen(                                                            value: datas),                                                    type: PageTransitionType                                                        .leftToRight));                                          },                                        ),                                        title: Builder(builder: (context) {                                          var name =                                              "${datas.firstName} ${datas.lastName}";                                          return RichText(                                            text: TextSpan(                                              text: 'Name: ',                                              style: const TextStyle(                                                  fontSize: 14,                                                  color: Colors.black,                                                  fontWeight: FontWeight.bold),                                              children: <TextSpan>[                                                TextSpan(                                                  text: name.toString(),                                                  style: const TextStyle(                                                      fontSize: 14,                                                      color: Colors.black,                                                      fontWeight:                                                          FontWeight.normal),                                                ),                                              ],                                            ),                                          );                                        }),                                        subtitle: Column(                                          mainAxisAlignment:                                              MainAxisAlignment.start,                                          crossAxisAlignment:                                              CrossAxisAlignment.start,                                          children: [                                            RichText(                                              text: TextSpan(                                                text: 'Email: ',                                                style: const TextStyle(                                                    fontSize: 14,                                                    color: Colors.black,                                                    fontWeight:                                                        FontWeight.bold),                                                children: <TextSpan>[                                                  TextSpan(                                                    text:                                                        datas.email.toString(),                                                    style: const TextStyle(                                                        fontSize: 14,                                                        color: Colors.black,                                                        fontWeight:                                                            FontWeight.normal),                                                  ),                                                ],                                              ),                                            ),                                            RichText(                                              text: TextSpan(                                                text: 'course: ',                                                style: const TextStyle(                                                    fontSize: 14,                                                    color: Colors.black,                                                    fontWeight:                                                        FontWeight.bold),                                                children: <TextSpan>[                                                  TextSpan(                                                    text:                                                        datas.course.toString(),                                                    style: const TextStyle(                                                        fontSize: 14,                                                        color: Colors.black,                                                        fontWeight:                                                            FontWeight.normal),                                                  ),                                                ],                                              ),                                            ),                                            RichText(                                              text: TextSpan(                                                text: 'Contact: ',                                                style: const TextStyle(                                                    fontSize: 14,                                                    color: Colors.black,                                                    fontWeight:                                                        FontWeight.bold),                                                children: <TextSpan>[                                                  TextSpan(                                                    text: datas.contact                                                        .toString(),                                                    style: const TextStyle(                                                        fontSize: 14,                                                        color: Colors.black,                                                        fontWeight:                                                            FontWeight.normal),                                                  ),                                                ],                                              ),                                            ),                                            RichText(                                              text: TextSpan(                                                text: 'Grade/Percentage: ',                                                style: const TextStyle(                                                    fontSize: 16,                                                    color: Colors.black,                                                    fontWeight:                                                        FontWeight.bold),                                                children: <TextSpan>[                                                  TextSpan(                                                    text:                                                        datas.percentage == null                                                            ? "n/a"                                                            : datas.percentage                                                                .toString(),                                                    style: const TextStyle(                                                        fontSize: 16,                                                        color: Colors.black,                                                        fontWeight:                                                            FontWeight.normal),                                                  ),                                                ],                                              ),                                            ),                                          ],                                        ),                                      ),                                    ],                                  ),                                ),                              );                            }),                    const SizedBox(                      height: 80,                    )                  ],                ),              ),      );    });  }}