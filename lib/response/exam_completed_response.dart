// To parse this JSON data, do////     final examCompletedResponse = examCompletedResponseFromJson(jsonString);import 'dart:convert';ExamCompletedResponse examCompletedResponseFromJson(String str) => ExamCompletedResponse.fromJson(json.decode(str));String examCompletedResponseToJson(ExamCompletedResponse data) => json.encode(data.toJson());class ExamCompletedResponse {  ExamCompletedResponse({    this.success,    this.exam,  });  bool? success;  ExamComplete? exam;  factory ExamCompletedResponse.fromJson(Map<String, dynamic> json) => ExamCompletedResponse(    success: json["success"],    exam: ExamComplete.fromJson(json["exam"]),  );  Map<String, dynamic> toJson() => {    "success": success,    "exam": exam?.toJson(),  };}class ExamComplete {  ExamComplete({    this.status,    this.fullMarks,    this.passMarks,    this.attemptedBy,    this.completedBy,    this.checked,    this.batch,    this.questions,    this.resit,    this.id,    this.examTitle,    this.event,    this.moduleSlug,    this.examSlug,    this.courseSlug,    this.startDate,    this.endDate,    this.examType,    this.institution,    this.addedBy,    this.createdAt,    this.updatedAt,    this.assignedHeading,    this.remarks,  });  String? status;  int? fullMarks;  int? passMarks;  List<String>? attemptedBy;  List<String>? completedBy;  List<dynamic>? checked;  List<String>? batch;  List<String>? questions;  List<dynamic>? resit;  String? id;  String? examTitle;  String? event;  String? moduleSlug;  String? examSlug;  String? courseSlug;  DateTime? startDate;  DateTime? endDate;  String? examType;  String? institution;  String? addedBy;  DateTime? createdAt;  DateTime? updatedAt;  String? assignedHeading;  String? remarks;  factory ExamComplete.fromJson(Map<String, dynamic> json) => ExamComplete(    status: json["status"],    fullMarks: json["fullMarks"],    passMarks: json["passMarks"],    attemptedBy: List<String>.from(json["attemptedBy"].map((x) => x)),    completedBy: List<String>.from(json["completedBy"].map((x) => x)),    checked: List<dynamic>.from(json["checked"].map((x) => x)),    batch: List<String>.from(json["batch"].map((x) => x)),    questions: List<String>.from(json["questions"].map((x) => x)),    resit: List<dynamic>.from(json["resit"].map((x) => x)),    id: json["_id"],    examTitle: json["examTitle"],    event: json["event"],    moduleSlug: json["moduleSlug"],    examSlug: json["examSlug"],    courseSlug: json["courseSlug"],    startDate: DateTime.parse(json["startDate"]),    endDate: DateTime.parse(json["endDate"]),    examType: json["examType"],    institution: json["institution"],    addedBy: json["addedBy"],    createdAt: DateTime.parse(json["createdAt"]),    updatedAt: DateTime.parse(json["updatedAt"]),    assignedHeading: json["assignedHeading"],    remarks: json["remarks"],  );  Map<String, dynamic> toJson() => {    "status": status,    "fullMarks": fullMarks,    "passMarks": passMarks,    "attemptedBy": List<dynamic>.from(attemptedBy!.map((x) => x)),    "completedBy": List<dynamic>.from(completedBy!.map((x) => x)),    "checked": List<dynamic>.from(checked!.map((x) => x)),    "batch": List<dynamic>.from(batch!.map((x) => x)),    "questions": List<dynamic>.from(questions!.map((x) => x)),    "resit": List<dynamic>.from(resit!.map((x) => x)),    "_id": id,    "examTitle": examTitle,    "event": event,    "moduleSlug": moduleSlug,    "examSlug": examSlug,    "courseSlug": courseSlug,    "startDate": startDate?.toIso8601String(),    "endDate": endDate?.toIso8601String(),    "examType": examType,    "institution": institution,    "addedBy": addedBy,    "createdAt": createdAt?.toIso8601String(),    "updatedAt": updatedAt?.toIso8601String(),    "assignedHeading": assignedHeading,    "remarks": remarks,  };}