// To parse this JSON data, do////     final studentDailyAttendanceResponse = studentDailyAttendanceResponseFromJson(jsonString);import 'dart:convert';QuestionAnswerResponse questionAnswerResponseFromJson(String str) => QuestionAnswerResponse.fromJson(json.decode(str));String questionAnswerResponseToJson(QuestionAnswerResponse data) => json.encode(data.toJson());class QuestionAnswerResponse {  QuestionAnswerResponse({    this.success,    this.exam,    this.message,    this.completed  });  bool? success;  Exam? exam;  String? message;  bool? completed;  factory QuestionAnswerResponse.fromJson(Map<String, dynamic> json) => QuestionAnswerResponse(    success: json["success"],    message: json["message"],    completed: json["completed"],    exam: json["exam"] == null ? null : Exam.fromJson(json["exam"]),  );  Map<String, dynamic> toJson() => {    "success": success,    "message": message,    "completed": completed,    "exam": exam?.toJson(),  };}class Exam {  Exam({    this.status,    this.fullMarks,    this.passMarks,    this.questions,    this.id,    this.examTitle,    this.startDate,    this.endDate,    this.remarks,    this.moduleTitle,    this.duration,    this.examCodeEnabled,  });  String? status;  num? fullMarks;  num? passMarks;  List<Question>? questions;  String? id;  String? examTitle;  DateTime? startDate;  DateTime? endDate;  String? remarks;  String? moduleTitle;  String? duration;  bool? examCodeEnabled;  factory Exam.fromJson(Map<String, dynamic> json) => Exam(    status: json["status"],    fullMarks: json["fullMarks"],    passMarks: json["passMarks"],    questions: List<Question>.from(json["questions"].map((x) => Question.fromJson(x))),    id: json["_id"],    examTitle: json["examTitle"],    startDate: DateTime.parse(json["startDate"]),    endDate: DateTime.parse(json["endDate"]),    remarks: json["remarks"],    moduleTitle: json["moduleTitle"],    duration: json["duration"],    examCodeEnabled: json["examCodeEnabled"],  );  Map<String, dynamic> toJson() => {    "status": status,    "fullMarks": fullMarks,    "passMarks": passMarks,    "questions": List<dynamic>.from(questions!.map((x) => x.toJson())),    "_id": id,    "examTitle": examTitle,    "startDate": startDate?.toIso8601String(),    "endDate": endDate?.toIso8601String(),    "remarks": remarks,    "moduleTitle": moduleTitle,    "duration": duration,    "examCodeEnabled": examCodeEnabled,  };}class Question {  Question({    this.hasCodeAnswer,    this.codeOptions,    this.id,    this.fullMarks,    this.question,    this.questionType,    this.institution,    this.options,  });  bool? hasCodeAnswer;  List<dynamic>? codeOptions;  String? id;  num? fullMarks;  String? question;  String? questionType;  String? institution;  List<String>? options;  factory Question.fromJson(Map<String, dynamic> json) => Question(    hasCodeAnswer: json["hasCodeAnswer"],    codeOptions: List<dynamic>.from(json["codeOptions"].map((x) => x)),    id: json["_id"],    fullMarks: json["fullMarks"],    question: json["question"],    questionType: json["questionType"],    institution: json["institution"],    options: List<String>.from(json["options"].map((x) => x)),  );  Map<String, dynamic> toJson() => {    "hasCodeAnswer": hasCodeAnswer,    "codeOptions": List<dynamic>.from(codeOptions!.map((x) => x)),    "_id": id,    "fullMarks": fullMarks,    "question": question,    "questionType": questionType,    "institution": institution,    "options": List<dynamic>.from(options!.map((x) => x)),  };}