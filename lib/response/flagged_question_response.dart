// To parse this JSON data, do////     final flaggedQuestionResponse = flaggedQuestionResponseFromJson(jsonString);import 'dart:convert';FlaggedQuestionResponse flaggedQuestionResponseFromJson(String str) => FlaggedQuestionResponse.fromJson(json.decode(str));String flaggedQuestionResponseToJson(FlaggedQuestionResponse data) => json.encode(data.toJson());class FlaggedQuestionResponse {  FlaggedQuestionResponse({    this.success,    this.flaggedQuestions,  });  bool? success;  List<FlaggedQuestion>? flaggedQuestions;  factory FlaggedQuestionResponse.fromJson(Map<String, dynamic> json) => FlaggedQuestionResponse(    success: json["success"],    flaggedQuestions: List<FlaggedQuestion>.from(json["flaggedQuestions"].map((x) => FlaggedQuestion.fromJson(x))),  );  Map<String, dynamic> toJson() => {    "success": success,    "flaggedQuestions": List<dynamic>.from(flaggedQuestions!.map((x) => x.toJson())),  };}class FlaggedQuestion {  FlaggedQuestion({    this.hasMarked,    this.id,    this.examQ,    this.username,    this.institution,    this.exam,    this.createdAt,  });  bool? hasMarked;  String? id;  ExamQ? examQ;  String? username;  String? institution;  String? exam;  DateTime? createdAt;  factory FlaggedQuestion.fromJson(Map<String, dynamic> json) => FlaggedQuestion(    hasMarked: json["hasMarked"],    id: json["_id"],    examQ: ExamQ.fromJson(json["examQ"]),    username: json["username"],    institution: json["institution"],    exam: json["exam"],    createdAt: DateTime.parse(json["createdAt"]),  );  Map<String, dynamic> toJson() => {    "hasMarked": hasMarked,    "_id": id,    "examQ": examQ?.toJson(),    "username": username,    "institution": institution,    "exam": exam,    "createdAt": createdAt?.toIso8601String(),  };}class ExamQ {  ExamQ({    this.id,  });  String? id;  factory ExamQ.fromJson(Map<String, dynamic> json) => ExamQ(    id: json["_id"],  );  Map<String, dynamic> toJson() => {    "_id": id,  };}