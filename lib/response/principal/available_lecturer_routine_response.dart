// To parse this JSON data, do////     final availableLecturerRoutineResponse = availableLecturerRoutineResponseFromJson(jsonString);import 'dart:convert';AvailableLecturerRoutineResponse availableLecturerRoutineResponseFromJson(String str) => AvailableLecturerRoutineResponse.fromJson(json.decode(str));String availableLecturerRoutineResponseToJson(AvailableLecturerRoutineResponse data) => json.encode(data.toJson());class AvailableLecturerRoutineResponse {  AvailableLecturerRoutineResponse({    this.success,    this.topPriority,    this.allRoutine,    this.collidedRoutine,    this.institution,  });  bool? success;  List<TopPriority>? topPriority;  List<AllRoutine>? allRoutine;  List<dynamic>? collidedRoutine;  String? institution;  factory AvailableLecturerRoutineResponse.fromJson(Map<String, dynamic> json) => AvailableLecturerRoutineResponse(    success: json["success"],    topPriority: List<TopPriority>.from(json["topPriority"].map((x) => TopPriority.fromJson(x))),    allRoutine: List<AllRoutine>.from(json["allRoutine"].map((x) => AllRoutine.fromJson(x))),    collidedRoutine: List<dynamic>.from(json["collidedRoutine"].map((x) => x)),    institution: json["institution"],  );  Map<String, dynamic> toJson() => {    "success": success,    "topPriority": List<dynamic>.from(topPriority!.map((x) => x.toJson())),    "allRoutine": List<dynamic>.from(allRoutine!.map((x) => x.toJson())),    "collidedRoutine": List<dynamic>.from(collidedRoutine!.map((x) => x)),    "institution": institution,  };}class AllRoutine {  AllRoutine({    this.title,    this.batch,    this.lecturer,    this.classLink,    this.start,    this.end,    this.moduleSlug,  });  String? title;  String? batch;  dynamic lecturer;  String? classLink;  DateTime? start;  DateTime? end;  String? moduleSlug;  factory AllRoutine.fromJson(Map<String, dynamic> json) => AllRoutine(    title: json["title"],    batch: json["batch"],    lecturer: json["lecturer"],    classLink: json["classLink"],    start: DateTime.parse(json["start"]),    end: DateTime.parse(json["end"]),    moduleSlug: json["moduleSlug"],  );  Map<String, dynamic> toJson() => {    "title": title,    "batch": batch,    "lecturer": lecturer,    "classLink": classLink,    "start": start?.toIso8601String(),    "end": end?.toIso8601String(),    "moduleSlug": moduleSlug,  };}class LecturerClass {  LecturerClass({    this.email,    this.firstname,    this.lastname,  });  String? email;  String? firstname;  String? lastname;  factory LecturerClass.fromJson(Map<String, dynamic> json) => LecturerClass(    email: json["email"],    firstname: json["firstname"],    lastname: json["lastname"],  );  Map<String, dynamic> toJson() => {    "email": email,    "firstname": firstname,    "lastname": lastname,  };}class TopPriority {  TopPriority({    this.title,    this.batch,    this.lecturer,    this.classLink,    this.start,    this.end,    this.moduleSlug,  });  String? title;  String? batch;  LecturerClass? lecturer;  String? classLink;  DateTime? start;  DateTime? end;  String? moduleSlug;  factory TopPriority.fromJson(Map<String, dynamic> json) => TopPriority(    title: json["title"],    batch: json["batch"],    lecturer: LecturerClass.fromJson(json["lecturer"]),    classLink: json["classLink"],    start: DateTime.parse(json["start"]),    end: DateTime.parse(json["end"]),    moduleSlug: json["moduleSlug"],  );  Map<String, dynamic> toJson() => {    "title": title,    "batch": batch,    "lecturer": lecturer?.toJson(),    "classLink": classLink,    "start": start?.toIso8601String(),    "end": end?.toIso8601String(),    "moduleSlug": moduleSlug,  };}