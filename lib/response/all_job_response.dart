// To parse this JSON data, do////     final allJobResponse = allJobResponseFromJson(jsonString);import 'dart:convert';AllJobResponse allJobResponseFromJson(String str) => AllJobResponse.fromJson(json.decode(str));String allJobResponseToJson(AllJobResponse data) => json.encode(data.toJson());class AllJobResponse {  AllJobResponse({    this.success,    this.allJobs,    this.count,  });  bool? success;  List<AllJob>? allJobs;  int? count;  factory AllJobResponse.fromJson(Map<String, dynamic> json) => AllJobResponse(    success: json["success"],    allJobs: List<AllJob>.from(json["allJobs"].map((x) => AllJob.fromJson(x))),    count: json["count"],  );  Map<String, dynamic> toJson() => {    "success": success,    "allJobs": List<dynamic>.from(allJobs!.map((x) => x.toJson())),    "count": count,  };}class AllJob {  AllJob({    this.salary,    this.experience,    this.skills,    this.jobStatus,    this.publishToAll,    this.publishedInstitution,    this.isActive,    this.viewCount,    this.id,    this.jobTitle,    this.jobCategory,    this.jobLevel,    this.openings,    this.employmentType,    this.location,    this.deadline,    this.education,    this.info,    this.description,    this.institution,    this.createdAt,    this.slug,    this.exam,    this.organization,  });  Salary? salary;  Experience? experience;  List<String>? skills;  String? jobStatus;  bool? publishToAll;  List<String>? publishedInstitution;  bool? isActive;  int? viewCount;  String? id;  String? jobTitle;  String? jobCategory;  String? jobLevel;  String? openings;  String? employmentType;  String? location;  DateTime? deadline;  String? education;  String? info;  String? description;  String? institution;  DateTime? createdAt;  String? slug;  String? exam;  Organization? organization;  factory AllJob.fromJson(Map<String, dynamic> json) => AllJob(    salary: Salary.fromJson(json["salary"]),    experience: Experience.fromJson(json["experience"]),    skills: List<String>.from(json["skills"].map((x) => x)),    jobStatus: json["jobStatus"],    publishToAll: json["publishToAll"],    publishedInstitution: List<String>.from(json["publishedInstitution"].map((x) => x)),    isActive: json["isActive"],    viewCount: json["viewCount"],    id: json["_id"],    jobTitle: json["jobTitle"],    jobCategory: json["jobCategory"],    jobLevel: json["jobLevel"],    openings: json["openings"],    employmentType: json["employmentType"],    location: json["location"],    deadline: DateTime.parse(json["deadline"]),    education: json["education"],    info: json["info"],    description: json["description"],    institution: json["institution"],    createdAt: DateTime.parse(json["createdAt"]),    slug: json["slug"],    exam: json["exam"],    organization: Organization.fromJson(json["organization"]),  );  Map<String, dynamic> toJson() => {    "salary": salary?.toJson(),    "experience": experience?.toJson(),    "skills": List<dynamic>.from(skills!.map((x) => x)),    "jobStatus": jobStatus,    "publishToAll": publishToAll,    "publishedInstitution": List<dynamic>.from(publishedInstitution!.map((x) => x)),    "isActive": isActive,    "viewCount": viewCount,    "_id": id,    "jobTitle": jobTitle,    "jobCategory": jobCategory,    "jobLevel": jobLevel,    "openings": openings,    "employmentType": employmentType,    "location": location,    "deadline": deadline?.toIso8601String(),    "education": education,    "info": info,    "description": description,    "institution": institution,    "createdAt": createdAt?.toIso8601String(),    "slug": slug,    "exam": exam,    "organization": organization?.toJson(),  };}class Experience {  Experience({    this.value,    this.label,  });  int? value;  String? label;  factory Experience.fromJson(Map<String, dynamic> json) => Experience(    value: json["value"],    label: json["label"],  );  Map<String, dynamic> toJson() => {    "value": value,    "label": label,  };}class Organization {  Organization({    this.footerLogo,    this.name,    this.address,    this.contact,    this.email,    this.website,  });  String? footerLogo;  String? name;  String? address;  String? contact;  String? email;  String? website;  factory Organization.fromJson(Map<String, dynamic> json) => Organization(    footerLogo: json["footerLogo"],    name: json["name"],    address: json["address"],    contact: json["contact"],    email: json["email"],    website: json["website"],  );  Map<String, dynamic> toJson() => {    "footerLogo": footerLogo,    "name": name,    "address": address,    "contact": contact,    "email": email,    "website": website,  };}class Salary {  Salary({    this.value,    this.from,    this.upto,  });  String? value;  int? from;  dynamic upto;  factory Salary.fromJson(Map<String, dynamic> json) => Salary(    value: json["value"],    from: json["from"],    upto: json["upto"],  );  Map<String, dynamic> toJson() => {    "value": value,    "from": from,    "upto": upto,  };}