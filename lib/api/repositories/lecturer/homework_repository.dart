import 'dart:convert';import 'package:schoolworkspro_app/api/api.dart';import 'package:schoolworkspro_app/response/common_response.dart';import 'package:schoolworkspro_app/response/lecturer/add_homework_response.dart';import '../../../response/file_upload_response.dart';import '../../../response/lecturer/get_homework_response.dart';class HomeworkRepository {  API api = API();  Future<AddHomeworkResponse> addHomework(request) async {    API api = new API();    dynamic response;    AddHomeworkResponse res;    try {      print("REQUEST HOMEWORK:::::::${request.toString()}");      response =          await api.postDataWithToken(jsonEncode(request), '/task/');      res = AddHomeworkResponse.fromJson(response);    } catch (e) {      res = AddHomeworkResponse.fromJson(response);      print("resssss"+jsonEncode(res));    }    return res;  }  Future<GetHomeworkResponse> viewHomework(moduleSlug, batch) async {    API api = new API();    dynamic response;    GetHomeworkResponse res;    try {      response = await api.getWithToken("/task/getAllTask/$moduleSlug?batch=$batch");          // .getWithToken('/task/getAllTask/$moduleSlug?batch=$batch');      res = GetHomeworkResponse.fromJson(response);    } catch (e) {      res = GetHomeworkResponse.fromJson(response);    }    return res;  }  Future<Commonresponse> deleteHomework(String id) async {    API api = new API();    dynamic response;    Commonresponse res;    try {      response = await api.deleteWithToken('/task/deleteTask/$id');      res = Commonresponse.fromJson(response);    } catch (e) {      print(e.toString());      res = Commonresponse.fromJson(response);    }    return res;  }  Future<AddHomeworkResponse> editHomework(request, id) async {    API api = new API();    dynamic response;    AddHomeworkResponse res;    try {      response =      await api.putDataWithToken(jsonEncode(request), '/task/$id');      res = AddHomeworkResponse.fromJson(response);    } catch (e) {      res = AddHomeworkResponse.fromJson(response);      print("resssss"+jsonEncode(res));    }    return res;  }  Future<GetHomeworkResponse> getStudentHomeworkStatus(taskSlug, username) async {    API api = new API();    dynamic response;    GetHomeworkResponse res;    try {      print("HomeWorkk::::${"/task/get-my-tasks/$taskSlug/$username"}");      response = await api.getWithToken("/task/get-my-tasks/$taskSlug/$username");      // .getWithToken('/task/getAllTask/$moduleSlug?batch=$batch');      res = GetHomeworkResponse.fromJson(response);    } catch (e) {      res = GetHomeworkResponse.fromJson(response);    }    return res;  }  Future<FileUploadResponse> addHomeWorkFile(request, filename) async {    API api = new API();    dynamic response;    FileUploadResponse res;    try {      response =      await api.postDataWithTokenAndOnlyFiles(request, filename);      res = FileUploadResponse.fromJson(response);    } catch (e) {      res = FileUploadResponse.fromJson(response);      print("resssss"+jsonEncode(res));    }    return res;  }}